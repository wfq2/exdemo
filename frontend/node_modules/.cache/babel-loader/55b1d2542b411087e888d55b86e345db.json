{"ast":null,"code":"var _jsxFileName = \"/Users/wyattqueirolo/Wyatt/chat-frontend/src/Chat.tsx\";\nimport React from 'react';\nimport { Socket } from 'phoenix';\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      inLobby: \"nope\"\n    };\n  }\n\n  onShout(payload) {\n    this.setState(state => ({\n      messages: state.messages.concat(payload)\n    }));\n  }\n\n  componentDidMount() {\n    let socket = new Socket('ws://localhost:4000/socket');\n    socket.connect();\n    let channel = socket.channel(\"chat_room:lobby\");\n    channel.join().receive(\"ok\", _ => {\n      console.log(\"in lobby\");\n      this.setState({\n        inLobby: \"yep\",\n        channel: channel\n      });\n    });\n    channel.on('shout', this.onShout);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 3\n      }\n    }, \"In lobby: \", this.state.inLobby);\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/wyattqueirolo/Wyatt/chat-frontend/src/Chat.tsx"],"names":["React","Socket","Chat","Component","constructor","props","state","messages","inLobby","onShout","payload","setState","concat","componentDidMount","socket","connect","channel","join","receive","_","console","log","on","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAgC,SAAhC;;AAgBA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAgD;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACxB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AAEDC,EAAAA,OAAO,CAACC,OAAD,EAAmB;AACxB,SAAKC,QAAL,CAAeL,KAAD,KAAmB;AAC/BC,MAAAA,QAAQ,EAAED,KAAK,CAACC,QAAN,CAAeK,MAAf,CAAsBF,OAAtB;AADqB,KAAnB,CAAd;AAGD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,MAAM,GAAG,IAAIb,MAAJ,CAAW,4BAAX,CAAb;AACAa,IAAAA,MAAM,CAACC,OAAP;AACA,QAAIC,OAAO,GAAGF,MAAM,CAACE,OAAP,CAAe,iBAAf,CAAd;AACAA,IAAAA,OAAO,CAACC,IAAR,GACGC,OADH,CACW,IADX,EACiBC,CAAC,IAAI;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,WAAKV,QAAL,CAAc;AAACH,QAAAA,OAAO,EAAE,KAAV;AAAiBQ,QAAAA,OAAO,EAAEA;AAA1B,OAAd;AACD,KAJH;AAKAA,IAAAA,OAAO,CAACM,EAAR,CAAW,OAAX,EAAoB,KAAKb,OAAzB;AACD;;AAEDc,EAAAA,MAAM,GAAG;AACP,wBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACa,KAAKjB,KAAL,CAAWE,OADxB,CADE;AAIA;;AAhC4C;;AAmChD,eAAeN,IAAf","sourcesContent":["import React from 'react';\nimport { Socket, Channel } from 'phoenix';\n\ntype Props = {\n}\n\ntype State = {\n  inLobby: string\n  messages: Message[]\n  channel?: Channel\n}\n\ntype Message = {\n  name: string\n  message: string\n}\n\nclass Chat extends React.Component<Props,State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      messages: [],\n      inLobby: \"nope\"\n    }\n  }\n\n  onShout(payload: Message) {\n    this.setState((state: State) => ({\n      messages: state.messages.concat(payload)\n    }))\n  }\n\n  componentDidMount() {\n    let socket = new Socket('ws://localhost:4000/socket')\n    socket.connect()\n    let channel = socket.channel(\"chat_room:lobby\")\n    channel.join()\n      .receive(\"ok\", _ => {\n        console.log(\"in lobby\")\n        this.setState({inLobby: \"yep\", channel: channel})\n      })\n    channel.on('shout', this.onShout)\n  }\n\n  render() {\n    return (\n  <div>\n    In lobby: {this.state.inLobby}\n  </div>\n  )}\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}