{"ast":null,"code":"var _jsxFileName = \"/Users/wyattqueirolo/Wyatt/chat/chat-frontend/src/Chat.tsx\";\nimport React from 'react';\nimport { Socket } from 'phoenix';\nimport { TextField, Button } from '@material-ui/core';\nimport { Formik, Form } from 'formik';\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onShout = payload => {\n      this.setState(state => ({\n        messages: state.messages.concat(payload)\n      }));\n    };\n\n    this.onSubmit = values => {\n      var _this$state$channel;\n\n      (_this$state$channel = this.state.channel) === null || _this$state$channel === void 0 ? void 0 : _this$state$channel.push('shout', {\n        name: values.name,\n        message: values.message\n      });\n    };\n\n    this.state = {\n      messages: [],\n      inLobby: \"nope\",\n      formState: {\n        name: \"\",\n        message: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    let socket = new Socket('ws://127.0.0.1:4000/socket');\n    socket.connect();\n    let channel = socket.channel(\"chat_room:lobby\");\n    channel.join().receive(\"ok\", _ => {\n      console.log(\"in lobby\");\n      this.setState({\n        inLobby: \"yep\",\n        channel: channel\n      });\n      this.onShout({\n        name: \"new user\",\n        message: \"has joined\"\n      });\n    });\n    channel.on('shout', this.onShout);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \"In lobby: \", this.state.inLobby), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      onSubmit: this.onSubmit,\n      initialValues: {\n        name: '',\n        message: ''\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, ({\n      values,\n      handleChange\n    }) => /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"name\",\n      label: \"name\",\n      name: \"name\",\n      value: values.name,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"message\",\n      label: \"Message\",\n      name: \"message\",\n      value: values.message,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, \" Send \"))))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, \"Messages: \", this.state.messages.map((m, i) => /*#__PURE__*/React.createElement(\"p\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 55\n      }\n    }, `${m.name}: ${m.message}`, \" \"))));\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/wyattqueirolo/Wyatt/chat/chat-frontend/src/Chat.tsx"],"names":["React","Socket","TextField","Button","Formik","Form","Chat","Component","constructor","props","onShout","payload","setState","state","messages","concat","onSubmit","values","channel","push","name","message","inLobby","formState","componentDidMount","socket","connect","join","receive","_","console","log","on","render","handleChange","map","m","i"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Socket, Channel } from 'phoenix';\nimport { TextField, Button } from '@material-ui/core'\nimport { Formik, Form } from 'formik'\n\ntype Props = {\n}\n\ntype State = {\n  inLobby: string\n  messages: Message[]\n  channel?: Channel\n  formState: Message\n}\n\ntype Message = {\n  name: string\n  message: string\n}\n\nclass Chat extends React.Component<Props,State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      messages: [],\n      inLobby: \"nope\",\n      formState: {name: \"\", message: \"\"}\n    }\n  }\n\n  onShout = (payload: Message) => {\n    this.setState((state: State) => ({\n      messages: state.messages.concat(payload)\n    }))\n  }\n\n  onSubmit = (values: Message) => {\n    this.state.channel?.push('shout', {\n      name: values.name,\n      message: values.message\n    })\n  }\n\n  componentDidMount() {\n    let socket = new Socket('ws://127.0.0.1:4000/socket')\n    socket.connect()\n    let channel = socket.channel(\"chat_room:lobby\")\n    channel.join()\n      .receive(\"ok\", _ => {\n        console.log(\"in lobby\")\n        this.setState({inLobby: \"yep\", channel: channel})\n        this.onShout({name: \"new user\", message: \"has joined\"})\n      })\n    channel.on('shout', this.onShout)\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n            In lobby: {this.state.inLobby}\n        </div>\n        <div>\n          <Formik onSubmit={this.onSubmit} initialValues={{name:'',message:''}}>\n            {({values, handleChange}) => (\n            <Form>\n              <div>\n                <TextField id='name' label='name' name=\"name\" value={values.name} onChange={handleChange}/>\n              </div><div>\n                <TextField id='message' label='Message' name=\"message\" value={values.message} onChange={handleChange}/>\n              </div><div>\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\"> Send </Button>\n              </div>\n            </Form>\n            )}\n          </Formik>\n        </div>\n        <div>\n          Messages: {this.state.messages.map((m,i) => <p key={i}>{`${m.name}: ${m.message}`} </p>) }\n        </div>\n    </div>\n  )}\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}